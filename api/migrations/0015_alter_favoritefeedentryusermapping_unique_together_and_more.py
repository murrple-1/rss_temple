# Generated by Django 4.0.4 on 2022-05-12 20:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("api", "0014_postgres_search_vector"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="favoritefeedentryusermapping",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="favoritefeedentryusermapping",
            name="feed_entry",
        ),
        migrations.RemoveField(
            model_name="favoritefeedentryusermapping",
            name="user",
        ),
        migrations.AlterUniqueTogether(
            name="feedusercategorymapping",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="feedusercategorymapping",
            name="feed",
        ),
        migrations.RemoveField(
            model_name="feedusercategorymapping",
            name="user_category",
        ),
        migrations.RemoveField(
            model_name="googlelogin",
            name="user",
        ),
        migrations.RemoveField(
            model_name="mylogin",
            name="user",
        ),
        migrations.RemoveField(
            model_name="passwordresettoken",
            name="user",
        ),
        migrations.RemoveField(
            model_name="session",
            name="user",
        ),
        migrations.AlterModelOptions(
            name="user",
            options={"verbose_name": "user", "verbose_name_plural": "users"},
        ),
        migrations.RemoveField(
            model_name="user",
            name="created_at",
        ),
        migrations.AddField(
            model_name="feed",
            name="subscribed_users",
            field=models.ManyToManyField(
                related_name="subscribed_feeds",
                through="api.SubscribedFeedUserMapping",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="feedentry",
            name="users_who_favorited",
            field=models.ManyToManyField(
                related_name="favorite_feed_entries", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="feedentry",
            name="users_who_read",
            field=models.ManyToManyField(
                related_name="read_feed_entries",
                through="api.ReadFeedEntryUserMapping",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="date_joined",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="date joined"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="first_name",
            field=models.CharField(
                blank=True, max_length=150, verbose_name="first name"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                verbose_name="active",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="is_staff",
            field=models.BooleanField(
                default=False,
                help_text="Designates whether the user can log into this admin site.",
                verbose_name="staff status",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="is_superuser",
            field=models.BooleanField(
                default=False,
                help_text="Designates that this user has all permissions without explicitly assigning them.",
                verbose_name="superuser status",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="last_login",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="last login"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="last_name",
            field=models.CharField(
                blank=True, max_length=150, verbose_name="last name"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="password",
            field=models.CharField(default="", max_length=128, verbose_name="password"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddField(
            model_name="usercategory",
            name="feeds",
            field=models.ManyToManyField(related_name="user_categories", to="api.feed"),
        ),
        migrations.AlterField(
            model_name="feedentry",
            name="feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="feed_entries",
                to="api.feed",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name="usercategory",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_categories",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="verificationtoken",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="verification_token",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.DeleteModel(
            name="FacebookLogin",
        ),
        migrations.DeleteModel(
            name="FavoriteFeedEntryUserMapping",
        ),
        migrations.DeleteModel(
            name="FeedUserCategoryMapping",
        ),
        migrations.DeleteModel(
            name="GoogleLogin",
        ),
        migrations.DeleteModel(
            name="MyLogin",
        ),
        migrations.DeleteModel(
            name="PasswordResetToken",
        ),
        migrations.DeleteModel(
            name="Session",
        ),
    ]
